<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
  'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>
  
<mapper namespace='com.simbest.cores.admin.authority.mapper.SysOrgMapper'>
	<!-- 定义缓存
	<cache eviction="LRU" flushInterval="60000" size="512" readOnly="true"/>
	-->
	<!-- LazyLoading 方式启用延迟加载，适用于单个详细实体对象  Start
  	<resultMap id="sysOrgResult" type="SysOrg">
        <id column="id" property="id" />
        <result column="description" property="description" />
        <result column="orgName" property="orgName" />
        <result column="orgCode" property="orgCode" /> 
        <result column="createDate" property="createDate" />
        <result column="updateDate" property="updateDate" /> 
		<association property='parent' resultMap='com.simbest.cores.admin.authority.mapper.SysOrgMapper.sysOrgResult'/>           
    </resultMap>
	
	<resultMap id="sysOrgLazyResult" type="SysOrg">
		<association property="parent" column="parent_id" javaType="SysOrg" fetchType="lazy" select="com.simbest.cores.admin.authority.mapper.SysOrgMapper.getById"/>		
	</resultMap>
		 -->
		 
    <!-- 关联查询方式，适用于集合列表实体对象  Start -->
	<resultMap id="simpleOrgResult" type="SysOrg">
        <id column="id" property="id" />
        <result column="description" property="description" />
        <result column="orgName" property="orgName" />
        <result column="orgCode" property="orgCode" />   
        <result column="createDate" property="createDate" />
        <result column="updateDate" property="updateDate" />
        <result column="pid" property="parentId" />
		<result column="porgName" property="parentName" />
		<result column="orgLevel" property="orgLevel" />
		<result column="orgType" property="orgType" />
        <result column="orgCategory" property="orgCategory" />
		<result column="orderBy" property="orderBy" />
		<result column="shortName" property="shortName" />
		<result column="remark" property="remark" />
        <result column="removed" property="removed" />
		<association property="parent" javaType="SysOrg">
			<id property="id" column="pid"/>
			<result column="porgCode" property="orgCode" />
			<result column="porgName" property="orgName" />
            <result column="porgLevel" property="orgLevel" />
		</association>
    </resultMap>
    		 
	<select id='getById' parameterType='Integer' resultMap="simpleOrgResult">
     	SELECT c.*,p.id AS pid,p.orgName AS porgName,p.orgCode AS porgCode,p.orgLevel AS porgLevel FROM sys_org c LEFT JOIN sys_org p ON c.parent_id=p.id WHERE c.id = #{id} and c.removed=0
	</select>
	<select id='getRoot' resultMap="simpleOrgResult" databaseId="mysql">
	     SELECT * FROM sys_org WHERE parent_id is null ORDER BY ISNULL(orderBy) ASC, orderBy ASC
    </select>	
	<select id='getRoot' resultMap="simpleOrgResult" databaseId="oracle">
	     SELECT * FROM sys_org WHERE parent_id is null ORDER BY NVL(orderBy,0) ASC, orderBy ASC
    </select>
    <!-- LazyLoading 方式启用延迟加载，适用于单个详细实体对象  End -->
    
  
    
	<select id='getByParent' parameterType='Integer' resultMap="simpleOrgResult" databaseId="mysql">
	     SELECT c.*,p.id AS pid,p.orgName AS porgName,p.orgCode AS porgCode,p.orgLevel AS porgLevel FROM sys_org c LEFT JOIN sys_org p ON c.parent_id=p.id WHERE c.parent_id = #{parentId} and c.removed=0 ORDER BY ISNULL(c.orderBy) ASC, c.orderBy ASC
    </select>
	<select id='getByParent' parameterType='Integer' resultMap="simpleOrgResult" databaseId="oracle">
	     SELECT c.*,p.id AS pid,p.orgName AS porgName,p.orgCode AS porgCode,p.orgLevel AS porgLevel FROM sys_org c LEFT JOIN sys_org p ON c.parent_id=p.id WHERE c.parent_id = #{parentId} and c.removed=0 ORDER BY NVL(c.orderBy,0) ASC, c.orderBy ASC
    </select>
    <select id='countByParent' parameterType='Integer' resultType="Integer">
	     SELECT count(*) FROM sys_org c LEFT JOIN sys_org p ON c.parent_id=p.id WHERE c.parent_id = #{parentId}	and c.removed=0
    </select>
	<select id='getExcludeRoot' resultMap="simpleOrgResult">
	     SELECT c.*,p.id AS pid,p.orgName AS porgName,p.orgCode AS porgCode,p.orgLevel AS porgLevel FROM sys_org c LEFT JOIN sys_org p ON c.parent_id=p.id WHERE c.parent_id is not null and c.removed=0 order by c.id asc
    </select>    
	<select id='getAll' resultMap="simpleOrgResult" databaseId="mysql">
     	SELECT c.*,p.id AS pid,p.orgName AS porgName,p.orgCode AS porgCode,p.orgLevel AS porgLevel FROM sys_org c LEFT JOIN sys_org p ON c.parent_id=p.id WHERE c.removed=0
        <if test="orgName != null and orgName !=''">
            AND c.orgName like concat('%',#{orgName},'%')
        </if>
        <if test="orgCode != null and orgCode !=''">
            AND c.orgCode like concat('%',#{orgCode},'%')
        </if>
        <if test="orgLevel != null and orgLevel !=''">
            AND c.orgLevel = #{orgLevel}
        </if>
        <if test="orgType != null and orgType !=''">
            AND c.orgType = #{orgType}
        </if>
        <if test="orgCategory != null and orgCategory !=''">
            AND c.orgCategory = #{orgCategory}
        </if>
        <if test="orderByClause != null and orderByClause !=''" >
	      order by ${orderByClause}
	    </if>
        <if test="orderByClause == null or orderByClause ==''" >
          ORDER BY ISNULL(c.orderBy) ASC, c.orderBy ASC
        </if>
	</select>
    <select id='getAll' resultMap="simpleOrgResult" databaseId="oracle">
        SELECT c.*,p.id AS pid,p.orgName AS porgName,p.orgCode AS porgCode,p.orgLevel AS porgLevel FROM sys_org c LEFT JOIN sys_org p ON c.parent_id=p.id WHERE c.removed=0
        <if test="orgName != null and orgName !=''">
            AND c.orgName = #{orgName}
        </if>
        <if test="orgCode != null and orgCode !=''">
            AND c.orgCode = #{orgCode}
        </if>
        <if test="orgLevel != null and orgLevel !=''">
            AND c.orgLevel = #{orgLevel}
        </if>
        <if test="orgType != null and orgType !=''">
            AND c.orgType = #{orgType}
        </if>
        <if test="orgCategory != null and orgCategory !=''">
            AND c.orgCategory = #{orgCategory}
        </if>
        <if test="orderByClause != null and orderByClause !=''" >
            order by ${orderByClause}
        </if>
        <if test="orderByClause == null or orderByClause ==''" >
            ORDER BY NVL(c.orderBy,0) ASC, c.orderBy ASC
        </if>
    </select>
  	<!-- 关联查询方式，适用于集合列表实体对象  End -->
  	
  	<insert id="create" parameterType="SysOrg" useGeneratedKeys="true" keyProperty="id" databaseId="mysql">
        insert into sys_org (createDate,updateDate,description,orgName,orgCode,parent_id,orgLevel,orgType,orderBy,shortName,remark,orgCategory) values(#{createDate},#{updateDate},#{description},#{orgName},#{orgCode},#{parent.id},#{orgLevel},#{orgType},#{orderBy},#{shortName},#{remark},#{orgCategory})
    </insert>
    <insert id="create" parameterType="SysOrg" useGeneratedKeys="false" keyProperty="id" databaseId="oracle">
        <selectKey resultType="Integer" keyProperty="id" order="BEFORE">
            select sys_org_seq.nextval as id from dual
        </selectKey>
        insert into sys_org (id,createDate,updateDate,description,orgName,orgCode,parent_id,orgLevel,orgType,orderBy,shortName,remark,orgCategory) values(#{id},#{createDate},#{updateDate},#{description},#{orgName},#{orgCode},#{parent.id},#{orgLevel},#{orgType},#{orderBy},#{shortName},#{remark},#{orgCategory})
    </insert>

    <update id="update" parameterType="SysOrg" flushCache="true" statementType="PREPARED" timeout="20">
        update sys_org set updateDate=#{updateDate},description=#{description},orgName=#{orgName},orgCode=#{orgCode},parent_id=#{parent.id},orgLevel=#{orgLevel},orgType=#{orgType},orderBy=#{orderBy},shortName=#{shortName},remark=#{remark},orgCategory=#{orgCategory} where id=#{id}
    </update>  
    
	<delete id="delete" parameterType="SysOrg" flushCache="true" statementType="PREPARED" timeout="20">
        UPDATE sys_org SET removed=1 WHERE id=#{id}
    </delete>	
       
    <delete id="batchDelete" flushCache="true" statementType="PREPARED" timeout="20">
        UPDATE sys_org SET removed=1 WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">   
	        #{item}   
	    </foreach> 
    </delete>
    
	<insert id="batchCreate" parameterType="java.util.List" flushCache="true" statementType="PREPARED" timeout="20" databaseId="mysql">
        insert into sys_org (createDate,updateDate,description,orgName,orgCode,parent_id,orgLevel,orgType,orderBy,shortName,remark,orgCategory) values
        <foreach collection="list" index="index" item="item" separator=",">   
	        (#{item.createDate},#{item.updateDate},#{item.description},#{item.orgName},#{item.orgCode},#{item.parent_id},#{item.orgLevel},#{item.orgType},#{item.orderBy},#{item.shortName},#{item.remark},#{item.orgCategory})
	    </foreach> 
    </insert>
    <insert id="batchCreate" parameterType="java.util.List" flushCache="true" statementType="PREPARED" timeout="20" databaseId="oracle">
        insert into sys_org (id,createDate,updateDate,description,orgName,orgCode,parent_id,orgLevel,orgType,orderBy,shortName,remark,orgCategory) values
        <foreach collection="list" index="index" item="item" separator=",">
            (sys_org_seq.nextval,#{item.createDate},#{item.updateDate},#{item.description},#{item.orgName},#{item.orgCode},#{item.parent_id},#{item.orgLevel},#{item.orgType},#{item.orderBy},#{item.shortName},#{item.remark},#{item.orgCategory})
        </foreach>
    </insert>
</mapper>